---
const navLinks = [
  { name: 'Home', href: '/', current: Astro.url.pathname === '/' },
  { name: 'Portfolio', href: '/portfolio', current: Astro.url.pathname.startsWith('/portfolio') },
  { name: 'About', href: '/about', current: Astro.url.pathname === '/about' },
  { name: 'Blog', href: '/blog', current: Astro.url.pathname.startsWith('/blog') },
  { name: 'FAQ', href: '/faq', current: Astro.url.pathname === '/faq' },
  { name: 'Contact', href: '/contact', current: Astro.url.pathname === '/contact' }
];
---

<header class="fixed top-0 w-full z-50 border-b border-transparent transition-all duration-300" id="navbar">
  <div class="container-custom flex items-center justify-between h-16 lg:h-20">
    
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-3 group" aria-label="Lenvow Home">
      <div class="w-10 h-10 bg-brand-dark rounded-xl flex items-center justify-center transform group-hover:scale-110 transition-transform">
        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
      </div>
      <span class="text-2xl font-serif text-brand-dark dark:text-brand-light">Lenvow</span>
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden lg:flex items-center space-x-8">
      {navLinks.map(link => (
        <a href={link.href} class:list={["font-sans text-lg transition-colors", { 'text-brand-dark dark:text-white font-semibold': link.current, 'text-brand-dark/70 dark:text-brand-light/70 hover:text-brand-dark dark:hover:text-white': !link.current }]}>
          {link.name}
        </a>
      ))}
    </nav>
    
    <!-- Desktop Action Buttons -->
    <div class="hidden lg:flex items-center space-x-4">
      <button id="dark-mode-toggle" type="button" class="p-2 rounded-full text-brand-dark/70 hover:text-brand-dark dark:text-brand-light/70 dark:hover:text-white transition-colors" aria-label="Toggle dark mode">
        <svg class="w-6 h-6 dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path></svg>
        <svg class="w-6 h-6 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
      </button>
      <a href="/contact" class="btn-primary">Book Session</a>
    </div>

    <!-- Mobile Hamburger Menu Button -->
    <div class="lg:hidden">
      <button type="button" id="mobile-menu-button" class="p-2 rounded-md text-brand-dark/70 dark:text-brand-light/70 focus:outline-none focus:ring-2 focus:ring-brand-dark" aria-controls="mobile-menu" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <svg class="h-6 w-6" id="menu-icon-open" stroke="currentColor" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg class="h-6 w-6 hidden" id="menu-icon-close" stroke="currentColor" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu Panel -->
  <div class="lg:hidden hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      {navLinks.map(link => (
        <a href={link.href} class:list={["block px-3 py-2 rounded-md text-base font-medium transition-colors", { 'bg-brand-tan text-brand-dark': link.current, 'text-brand-dark dark:text-brand-light hover:bg-brand-tan/50': !link.current }]}>
          {link.name}
        </a>
      ))}
      <div class="pt-4 mt-4 border-t border-brand-tan">
        <a href="/contact" class="btn-primary w-full">Book Session</a>
        <div class="mt-4 flex justify-center">
            <button id="mobile-dark-mode-toggle" type="button" class="p-2 rounded-full text-brand-dark/70 hover:text-brand-dark dark:text-brand-light/70 dark:hover:text-white transition-colors" aria-label="Toggle dark mode">
                <svg class="w-6 h-6 dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path></svg>
                <svg class="w-6 h-6 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
            </button>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  const navbar = document.getElementById('navbar');
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIconOpen = document.getElementById('menu-icon-open');
  const menuIconClose = document.getElementById('menu-icon-close');
  const darkModeToggle = document.getElementById('dark-mode-toggle');
  const mobileDarkModeToggle = document.getElementById('mobile-dark-mode-toggle');

  // Function to handle scroll-based navbar styling
  function handleScroll() {
    if (window.scrollY > 50) {
      navbar.classList.add('scrolled');
    } else {
      navbar.classList.remove('scrolled');
    }
  }

  // Function to toggle the mobile menu
  function toggleMobileMenu() {
    mobileMenu.classList.toggle('hidden');
    menuIconOpen.classList.toggle('hidden');
    menuIconClose.classList.toggle('hidden');
    const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
    mobileMenuButton.setAttribute('aria-expanded', !isExpanded);
  }

  // Function to handle dark mode toggling
  function toggleDarkMode() {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('darkMode', isDark);
  }
  
  // Attach event listeners
  window.addEventListener('scroll', handleScroll);
  mobileMenuButton.addEventListener('click', toggleMobileMenu);
  darkModeToggle.addEventListener('click', toggleDarkMode);
  mobileDarkModeToggle.addEventListener('click', toggleDarkMode);
</script>

<style>
  /* This CSS class provides a solid background, fixing the half-bar bug */
  #navbar.scrolled, #navbar #mobile-menu {
    @apply bg-brand-light/95 dark:bg-brand-dark/95 backdrop-blur-lg border-brand-tan/50;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.05);
  }
</style>